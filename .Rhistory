val.noschool <- low.wage*childhood
}
if(child  == 1& adult == 1){
val.noschool <- low.wage*(life.expect - childhood)
}
return(val.noschool)
}
id <- c(1:1000)
people <-data.frame(id)
people$noschool <- rep(NA, nrow(people))
people$school <- rep(NA, nrow(people))
people$high.wage <- rep(NA, nrow(people))
for (i in 1:nrow(people)){
people$high.wage[i] <- high.wage[i]
people$school[i] <- a.school.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death))[i],people$high.wage[i] )
people$noschool[i] <- a.noschool.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death)),people$high.wage[i] )
}
warnings()
yc(0.5)
yc(prob.child.death)[1]
View(people)
for (i in 1:nrow(people)){
people$high.wage[i] <- high.wage[i]
people$school[i] <- function(prob.child.death, prob.young.death){
a.school.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death))[i],people$high.wage[i] )
}
people$noschool[i] <- a.noschool.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death)),people$high.wage[i] )
}
for (i in 1:nrow(people)){
people$yc[i] <- yc(prob.child.death)[i]
people$ya[i] <- ya(prob.young.death, yc(prob.child.death))[i]
people$high.wage[i] <- high.wage[i]
people$school[i] <- a.school.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death))[i],people$high.wage[i] )
people$noschool[i] <- a.noschool.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death)),people$high.wage[i] )
}
child.mortality <- length(subset(people$yc, yc == 0))/1000
View(people)
people$yc
subsetsubset(people$yc, yc == 0))
subset(people$yc, yc == 0)
for (i in 1:nrow(people)){
people$yc[i] <- yc(prob.child.death)[i]
people$ya[i] <- ya(prob.young.death, people$yc[i])[i]
people$high.wage[i] <- high.wage[i]
people$school[i] <- a.school.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death))[i],people$high.wage[i] )
people$noschool[i] <- a.noschool.val(yc(prob.child.death)[i],ya(prob.young.death, yc(prob.child.death)),people$high.wage[i] )
}
num.school <- length(subset(people$school, school>people$noschool))
num.noschool <- length(subset(people$noschool, people$noschool>people$school))
num.noschool <- length(subset(people$noschool, people$noschool>people$school))
child.mortality <- length(subset(people$yc, yc == 0))/1000
threshold = 0
child.mortality <- length(subset(people$yc, yc == 0))/1000
## Question 4.i ##
library(xtable)
set.seed(45)
id <- c(1:10000)
myppl <- data.frame(id )
myppl$group <- rep(NA, nrow(myppl))
myppl$treated <- rep(NA, nrow(myppl))
myppl$nottreated <- rep(NA, nrow(myppl))
myppl$effect <- rep(NA, nrow(myppl))
myppl$takeup <- rep(NA, nrow(myppl))
myppl$outcome <- rep(NA, nrow(myppl))
myppl$treatment <- rep(NA, nrow(myppl))
zero <- c(0.5,1,1.5,2)
one <- c(1.5,2, 2, 2.5)
for (i in 1:nrow(myppl)){
myppl$group[i] <- sample(1:4, 1, replace=TRUE)
myppl$treatment[i] <- sample(0:1, 1, replace=TRUE)
}
for (i in 1:nrow(myppl)){
myppl$treated[i] <- one[myppl$group[i]] + rnorm(1)
myppl$nottreated[i] <- zero[myppl$group[i]] + rnorm(1)
print(as.character(i))
}
for (i in 1:nrow(myppl)){
if (myppl$treatment[i] == 1){
myppl$effect[i] <- myppl$treated[i] - myppl$nottreated[i]
}
print(as.character(i))
}
for (i in 1:nrow(myppl)){
if (myppl$effect[i] > 0.5 & myppl$treatment[i] == 1){
myppl$takeup[i] <- 1
}
if (myppl$effect[i] <= 0.5 & myppl$treatment[i] == 1){
myppl$takeup[i] <- 0
}
print(as.character(i))
}
for (i in 1:nrow(myppl)){
if (myppl$takeup[i] == 1 & myppl$treatment[i] == 1){
myppl$outcome[i] <- myppl$treated[i]
}
else {
myppl$outcome[i] <- myppl$nottreated[i]
}
print(as.character(i))
}
treated.ppl <- subset(myppl, treatment == 1)
not.treated.ppl <- subset(myppl, treatment == 0)
takeupGroup <- c( mean((treated.ppl[(treated.ppl$group == 1),])$takeup),
mean((treated.ppl[(treated.ppl$group == 2),])$takeup),
mean((treated.ppl[(treated.ppl$group == 3),])$takeup),
mean((treated.ppl[(treated.ppl$group == 4),])$takeup))
takeuprates <- data.frame(takeupGroup)
xtable(takeuprates, digits=c(4,4))
numerator <- mean(treated.ppl$outcome) - mean(not.treated.ppl$nottreated)
denominator <- mean(treated.ppl$takeup)
betaIV <- numerator/denominator
ATE <- mean(treated.ppl$treated) - mean(not.treated.ppl$nottreated)
ATET <- mean(treated.ppl$treated) - mean(treated.ppl$nottreated)
ATEN <- mean(not.treated.ppl$treated) - mean(not.treated.ppl$nottreated)
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
setwd("~/Desktop/data")
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
View(lifetables)
lifetables$ageid <- rep(0, nrow(lifetables))
mydata$cohort[mydata$AGEGROUP  == AGELT1] <- 0
mydata$cohort[lifetables$AGEGROUP  == AGELT1] <- 0
lifetables$ageid[lifetables$AGEGROUP  == AGELT1] <- 0
head(lifetables$AGEGROUP)
lifetables$ageid[lifetables$AGEGROUP  == AGELT1] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid <- rep(0, nrow(lifetables))
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGE1-4"] <- 1
lifetables$ageid[lifetables$AGEGROUP  == "AGE5-9"] <- 2
lifetables$ageid[lifetables$AGEGROUP  == "AGE10-14"] <- 3
lifetables$ageid[lifetables$AGEGROUP  == "AGE15-19"] <- 4
lifetables$ageid[lifetables$AGEGROUP  == "AGE20-24"] <- 5
lifetables$ageid[lifetables$AGEGROUP  == "AGE25-30"] <- 6
lifetables$ageid[lifetables$AGEGROUP  == "AGE30-34"] <- 7
lifetables$ageid[lifetables$AGEGROUP  == "AGE35-39"] <- 8
lifetables$ageid[lifetables$AGEGROUP  == "AGE40-44"] <- 9
lifetables$ageid[lifetables$AGEGROUP  == "AGE45-50"] <- 10
lifetables.under50 <- lifetables[lifetables$ageid <11]
lifetables.under50 <- na.omit(lifetables)
View(lifetables.under50)
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGE1-4"] <- 1
lifetables$ageid[lifetables$AGEGROUP  == "AGE5-9"] <- 2
lifetables$ageid[lifetables$AGEGROUP  == "AGE10-14"] <- 3
lifetables$ageid[lifetables$AGEGROUP  == "AGE15-19"] <- 4
lifetables$ageid[lifetables$AGEGROUP  == "AGE20-24"] <- 5
lifetables$ageid[lifetables$AGEGROUP  == "AGE25-30"] <- 6
lifetables$ageid[lifetables$AGEGROUP  == "AGE30-34"] <- 7
lifetables$ageid[lifetables$AGEGROUP  == "AGE35-39"] <- 8
lifetables$ageid[lifetables$AGEGROUP  == "AGE40-44"] <- 9
lifetables$ageid[lifetables$AGEGROUP  == "AGE45-50"] <- 10
lifetables.under50 <- na.omit(lifetables)
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 100
lifetables$ageid <- rep(NA, nrow(lifetables))
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGE1-4"] <- 1
lifetables$ageid[lifetables$AGEGROUP  == "AGE5-9"] <- 2
lifetables$ageid[lifetables$AGEGROUP  == "AGE10-14"] <- 3
lifetables$ageid[lifetables$AGEGROUP  == "AGE15-19"] <- 4
lifetables$ageid[lifetables$AGEGROUP  == "AGE20-24"] <- 5
lifetables$ageid[lifetables$AGEGROUP  == "AGE25-30"] <- 6
lifetables$ageid[lifetables$AGEGROUP  == "AGE30-34"] <- 7
lifetables$ageid[lifetables$AGEGROUP  == "AGE35-39"] <- 8
lifetables$ageid[lifetables$AGEGROUP  == "AGE40-44"] <- 9
lifetables$ageid[lifetables$AGEGROUP  == "AGE45-50"] <- 10
lifetables.under50 <- na.omit(lifetables)
View(lifetables.under50)
lifetables <- na.omit(lifetables)
melted.mort <- melt(lifetables, id=c("country"))
library(reshape2)
melted.mort <- melt(lifetables, id=c("country"))
melted.mort <- melt(lifetables, id=c("AGEGROUP"))
View(melted.mort)
melted.mort <- melt(lifetables)
View(melted.mort)
melted.mort <- melt(lifetables, id = c("COUNTRY, AGEGROUP, YEAR"))
melted.mort <- melt(lifetables, id=c("AGEGROUP", "COUNTRY", "YEAR"))
View(melted.mort)
lifetables <- na.omit(lifetables)[lifetables$COUNTRY, lifetables$prob_death, lifetables$YEAR]
View(lifetables.under50)
lifetables$GHO <- NULL
View(lifetables.under50)
View(lifetables)
View(lifetables.under50)
lifetables$PUBLISHSTATE <- NULL
lifetables$PUBLISHSTATE <- NULL
head(lifetables)
# Load in the WHO data set, which comes from an API pull of GHO/Life 029
setwd("~/Desktop/data")
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Load some packages
library(reshape2)
lifetables$PUBLISHSTATE <- NULL
lifetables$PUBLISHSTATE <- NULL
lifetables$GHO <- NULL
lifetables$REGION <- NULL
lifetables$WORLDBANKINCOMEGROUP <- NULL
lifetables <-lifetables[lifetables$SEX == MLE]
lifetables$SEX <- NULL
setwd("~/Desktop/data")
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Drop stupid variables
lifetables$PUBLISHSTATE <- NULL
lifetables$GHO <- NULL
lifetables$REGION <- NULL
lifetables$WORLDBANKINCOMEGROUP <- NULL
lifetables <-lifetables[lifetables$SEX == "MLE"]
lifetables$SEX <-lifetables[lifetables$SEX == "MLE"]
lifetables$SEX <-lifetables$SEX[lifetables$SEX == "MLE"]
lifetables <- lifetables[("MLE" < data$SEX),]
lifetables <- lifetables[("MLE" == data$SEX),]
lifetables <- lifetables[("MLE" == lifetables$SEX),]
lifetables$SEX <- NULL
# Load in the WHO data set, which comes from an API pull of GHO/Life 029
setwd("~/Desktop/data")
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Drop stupid variables
lifetables$PUBLISHSTATE <- NULL
lifetables$GHO <- NULL
lifetables$REGION <- NULL
lifetables$WORLDBANKINCOMEGROUP <- NULL
# Keep only MALE observations
lifetables <- lifetables[("MLE" == lifetables$SEX),]
lifetables$SEX <- NULL
# Load some packages
library(reshape2)
# Categorize Age Groups into Numbers
lifetables$ageid <- rep(NA, nrow(lifetables))
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGE1-4"] <- 1
lifetables$ageid[lifetables$AGEGROUP  == "AGE5-9"] <- 2
lifetables$ageid[lifetables$AGEGROUP  == "AGE10-14"] <- 3
lifetables$ageid[lifetables$AGEGROUP  == "AGE15-19"] <- 4
lifetables$ageid[lifetables$AGEGROUP  == "AGE20-24"] <- 5
lifetables$ageid[lifetables$AGEGROUP  == "AGE25-30"] <- 6
lifetables$ageid[lifetables$AGEGROUP  == "AGE30-34"] <- 7
lifetables$ageid[lifetables$AGEGROUP  == "AGE35-39"] <- 8
lifetables$ageid[lifetables$AGEGROUP  == "AGE40-44"] <- 9
lifetables$ageid[lifetables$AGEGROUP  == "AGE45-50"] <- 10
lifetables <- na.omit(lifetables)
melted.mort <- melt(lifetables, id=c("AGEGROUP", "COUNTRY", "YEAR"))
# Load in the WHO data set, which comes from an API pull of GHO/Life 029
setwd("~/Desktop/data")
lifetables <- read.csv("complete_lifetables.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Drop stupid variables
lifetables$PUBLISHSTATE <- NULL
lifetables$GHO <- NULL
lifetables$REGION <- NULL
lifetables$WORLDBANKINCOMEGROUP <- NULL
# Keep only MALE observations
lifetables <- lifetables[("MLE" == lifetables$SEX),]
lifetables$SEX <- NULL
# Load some packages
library(reshape2)
# Categorize Age Groups into Numbers
lifetables$ageid <- rep(NA, nrow(lifetables))
lifetables$ageid[lifetables$AGEGROUP  == "AGELT1"] <- 0
lifetables$ageid[lifetables$AGEGROUP  == "AGE1-4"] <- 1
lifetables$ageid[lifetables$AGEGROUP  == "AGE5-9"] <- 2
lifetables$ageid[lifetables$AGEGROUP  == "AGE10-14"] <- 3
lifetables$ageid[lifetables$AGEGROUP  == "AGE15-19"] <- 4
lifetables$ageid[lifetables$AGEGROUP  == "AGE20-24"] <- 5
lifetables$ageid[lifetables$AGEGROUP  == "AGE25-30"] <- 6
lifetables$ageid[lifetables$AGEGROUP  == "AGE30-34"] <- 7
lifetables$ageid[lifetables$AGEGROUP  == "AGE35-39"] <- 8
lifetables$ageid[lifetables$AGEGROUP  == "AGE40-44"] <- 9
lifetables$ageid[lifetables$AGEGROUP  == "AGE45-50"] <- 10
lifetables <- na.omit(lifetables)
melted.mort <- melt(lifetables, id=c("AGEGROUP", "COUNTRY", "YEAR"))
View(melted.mort)
melted.mort <- melt(lifetables, id=c("AGEGROUP", "COUNTRY", "YEAR", "AGEID"))
melted.mort <- melt(lifetables, id=c("AGEGROUP", "COUNTRY", "YEAR", "ageid"))
youngmort <- rep(NA, nrow(lifetables$country))
youngmort <- rep(NA, nrow(lifetables))
youngmort$value <- lifetables$prob_death[lifetables$ageid == 2] + lifetables$prob_death[lifetables$ageid == 3]
lifetables$value <- lifetables$prob_death[lifetables$ageid == 2] + lifetables$prob_death[lifetables$ageid == 3]
View(lifetables)
write.csv(melted.mort)
write.csv(melted.mort, file = "formatted_lifetables.csv")
View(melted.mort)
ggplot(data=melted.mort, aes(x=ageid, y=value)) + geom_boxplot()+scale_x_discrete(name ="Age Group", labels = c("1-4yrs","10-14yrs",
ggplot(data=melted.mort, aes(x=ageid, y=value)) + geom_boxplot()+scale_x_discrete(name ="Age Group")
)
asdf
ggplot(data=melted.mort, aes(x=ageid, y=value)) + geom_boxplot()+scale_x_discrete(name ="Age Group")
library(ggplot2)
ggplot(data=melted.mort, aes(x=ageid, y=value)) + geom_boxplot()+scale_x_discrete(name ="Age Group")
value.bygroup <- na.omit(aggregate(melted.mort$value, by=list(melted.mort$AGEGROUP),
FUN=mean, na.rm=TRUE))
ggplot(data=value.bygroup, aes(x=Group.1, y=x)) + geom_boxplot() +scale_x_discrete(name ="Age Group")
ggplot(data=value.bygroup, aes(x=Group.1, y=x)) + geom_bar() +scale_x_discrete(name ="Age Group")
ggplot(data=value.bygroup, aes(x=Group.1, y=x)) + geom_bar( stat="identity") +scale_x_discrete(name ="Age Group")
ggplot(data=value.bygroup, aes(x=Group.1, y=x)) + geom_bar( stat="identity") +scale_x_discrete(name ="Age Group") + ylab("Probability of Making it to \n the Next Bracket")
View(melted.mort)
# Data work #
# Covert data from STATA to CSV #
setwd("~/Desktop/data")
library(foreign)
library(ggplot2)
library(plm)
library(stargazer)
write.table(read.dta('saturdayam.dta'), file="output.csv", quote = FALSE, sep = ",")
# Read it into R #
data <- read.csv("output.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Subsetting by income group #
low <- subset(data, data$low == 1)
high <- subset(data, data$high == 1)
gavi00 <- subset(data, data$gavi_status_00== 1)
no.gavi00 <- subset(data, data$gavi_status_00== 0)
awesome.plot <- ggplot(data=gavi00.schooling.covered, aes(x=Group.1, y=x),
colour="black") + geom_line(linetype = "dotdash") +
geom_line(data=gavi00.schooling.notcovered, aes(x=Group.1, y=x),
colour="black") + xlab("Year") + ylab("Percentage of Out of School Children \n Of Primary School Age") +theme_bw()+ xlim(1980, 2014) +  geom_vline(xintercept = 1992)
gavi.sub.covered <- subset(gavi00, mcv_covered == 1)
gavi.sub.notcovered <- subset(gavi00, mcv_covered == 0)
gavi00.schooling.covered <- na.omit(aggregate(gavi.sub.covered$rateofoutofschoolMF, by=list(gavi.sub.covered$year),
FUN=mean, na.rm=TRUE))
awesome.plot <- ggplot(data=gavi00.schooling.covered, aes(x=Group.1, y=x),
colour="black") + geom_line(linetype = "dotdash") +
geom_line(data=gavi00.schooling.notcovered, aes(x=Group.1, y=x),
colour="black") + xlab("Year") + ylab("Percentage of Out of School Children \n Of Primary School Age") +theme_bw()+ xlim(1980, 2014) +  geom_vline(xintercept = 1992)
gavi00.schooling.notcovered <- na.omit(aggregate(gavi.sub.notcovered$rateofoutofschoolMF, by=list(gavi.sub.notcovered$year),
FUN=mean, na.rm=TRUE))
awesome.plot <- ggplot(data=gavi00.schooling.covered, aes(x=Group.1, y=x),
colour="black") + geom_line(linetype = "dotdash") +
geom_line(data=gavi00.schooling.notcovered, aes(x=Group.1, y=x),
colour="black") + xlab("Year") + ylab("Percentage of Out of School Children \n Of Primary School Age") +theme_bw()+ xlim(1980, 2014) +  geom_vline(xintercept = 1992)
awesome.plot
school.mortality <- ggplot(data = gavi00, aes(x = mortality, y = rateofoutofschoolMF)) + geom_point() + stat_smooth()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School") +theme_bw()
school.mortality
mean.mort.country <- na.omit(aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE))
mean.mort.country
mean.mort.country <- na.omit(aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$mortality),
FUN=mean, na.rm=TRUE))
mean.mort.country
school.mortality.means <- ggplot(data = mean.mort.country, aes(x = Group.1, y = x)) + geom_point() + stat_smooth()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School") +theme_bw()
school.mortality
school.mortality.means
mean.mort.country <- na.omit(aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE))
mean.mort.school <- na.omit(aggregate(gavi00$mortality, by=list(gavi00$code),
FUN=mean, na.rm=TRUE))
means <- cbind(mean.mort.school, mean.mort.country)
mean.mort.country <- aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
mean.mort.school <- aggregate(gavi00$mortality, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
means <- cbind(mean.mort.school, mean.mort.country)
head(means)
mean.mort.school <- aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
mean.mort.mortality <- aggregate(gavi00$mortality, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
means <- cbind(mean.mort.school, mean.mort.country)
names(means) <- c(code Mortality code Schooling)
names(means)[1] <- c("code")
names(means)[1] <- c("code")
names(means)[2] <- c("mort")
names(means)[3] <- c("code")
names(means)[4] <- c("school")
head(means)
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school)) + geom_point() + stat_smooth()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School") +theme_bw()
school.mortality.means
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school)) + geom_point() + stat_smooth()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality
school.mortality.means
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = rownames(means))) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text()
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text()
mean.mort.school <- aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$country),
FUN=mean, na.rm=TRUE)
mean.mort.mortality <- aggregate(gavi00$mortality, by=list(gavi00$country),
FUN=mean, na.rm=TRUE)
# Combine
means <- cbind(mean.mort.school, mean.mort.country)
# Relabel Columns
names(means)[1] <- c("code")
names(means)[2] <- c("mort")
names(means)[3] <- c("code")
names(means)[4] <- c("school")
# Plot averages of schooling and mortality
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text()
means
school.mortality.means + geom_text(check_overlap = TRUE)
mean.mort.school <- aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
mean.mort.mortality <- aggregate(gavi00$mortality, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
# Combine
means <- cbind(mean.mort.school, mean.mort.country)
# Relabel Columns
names(means)[1] <- c("code")
names(means)[2] <- c("mort")
names(means)[3] <- c("code")
names(means)[4] <- c("school")
# Plot averages of schooling and mortality
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text()
means
means
means <- cbind(mean.mort.school, mean.mort.country)
means
mean.mort.school
mean.school <- aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
mean.mortality <- aggregate(gavi00$mortality, by=list(gavi00$code),
FUN=mean, na.rm=TRUE)
# Combine
means <- cbind(mean.mort.school, mean.mort.country)
means <- cbind(mean.mort.school, mean.mort.country)
means
means <- cbind(mean.school, mean.mortality)
means
names(means)[1] <- c("code")
names(means)[2] <- c("mort")
names(means)[3] <- c("code")
names(means)[4] <- c("school")
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text()
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_label()
# Plot averages of schooling and mortality
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + geom_point() + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text(checkoverlap = TRUE)
school.mortality.means + geom_text(check_overlap = TRUE)
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text(check_overlap = TRUE)
school.mortality.means <- ggplot(data = means, aes(x =mort, y = school, label = code)) + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text(check_overlap = TRUE) + stats_smooth()
school.mortality.means + geom_text(check_overlap = TRUE) + stat_smooth()
# Plot averages of schooling and mortality
school.mortality.means <- ggplot(data = means, aes(x =school, y = mort, label = code)) + theme_bw()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School")
school.mortality.means + geom_text(check_overlap = TRUE) + stat_smooth()
no.gavi00.spending <- ggplot(no.gavi00.year.spending, aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Percentage of Immunization Costs \n Covered by National Government") +
ggtitle("") + theme_bw()
no.gavi00.year.spending <- na.omit(aggregate(no.gavi00$vaxspending, by=list(no.gavi00$year),
FUN=mean, na.rm=TRUE))
no.gavi00.spending <- ggplot(no.gavi00.year.spending, aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Percentage of Immunization Costs \n Covered by National Government") +
ggtitle("") + theme_bw()
no.gavi00.spending
# Plot vaccine spending for GAVI and non GAVI countries
# Plot vaccine spending for GAVI and non GAVI countries
vaccine.budget <- ggplot() +
geom_line(data=gavi00.year.spending, aes(x=Group.1, y=x),
colour="blue") +
geom_line(data=no.gavi00.year.spending, aes(x=Group.1, y=x),
colour="red") + xlab("Year") + ylab("Percentage of Immunization Costs \n Covered by National Government") +theme_bw()
gavi00.year.spending <- na.omit(aggregate(as.numeric(gavi00$vaxspending), by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
vaccine.budget <- ggplot() +
geom_line(data=gavi00.year.spending, aes(x=Group.1, y=x),
colour="blue") +
geom_line(data=no.gavi00.year.spending, aes(x=Group.1, y=x),
colour="red") + xlab("Year") + ylab("Percentage of Immunization Costs \n Covered by National Government") +theme_bw()
vaccine.budget
gavi00.diff.mort <- ggplot(gavi00, aes(x = diff_mcv1coverage, y = diff_cases)) +                    # basic graphical object
geom_point() + labs(x = "Change in Coverage", y = "Change in Mortality") +
ggtitle("") + theme_bw()
gavi00.diff.mort
gavi00.diff.mort.means <- na.omit(aggregate(as.numeric(gavi00$diff_mortality), by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
gavi00.diff.cov.means <- na.omit(aggregate(as.numeric(gavi00$diff_mcv1coverage), by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
gavi00.diff.mort <- ggplot() +                    # basic graphical object
geom_point(data = gavi00.diff.cov.means, aes(x = Group.1, y = x)) +
geom_point(data = gavi00.diff.mort.means, aes(x = Group.1, y = x)) +
labs(x = "Change in Coverage", y = "Change in Mortality") +
ggtitle("") + theme_bw()
gavi00.diff.mort
diff.means <- cbind(gavi00.diff.mort.means, gavi00.diff.cov.means )
gavi00.diff.mort.means <- aggregate(as.numeric(gavi00$diff_mortality), by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
gavi00.diff.cov.means <- aggregate(as.numeric(gavi00$diff_mcv1coverage), by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
head(diff)
diff.means <- cbind(gavi00.diff.mort.means, gavi00.diff.cov.means )
head(diff.means)
total.measlescases <- ggplot(data.year.measlescases.sum, aes(x = Group.1, y =x)) + geom_bar(stat = "identity") + xlim(1980,2013) +xlab("Year")+ylab("Number of Measles Cases") + theme_bw()
data.year.measlescases.sum <- aggregate(data$measles_cases, by=list(data$year),
FUN=sum, na.rm=TRUE)
total.measlescases <- ggplot(data.year.measlescases.sum, aes(x = Group.1, y =x)) + geom_bar(stat = "identity") + xlim(1980,2013) +xlab("Year")+ylab("Number of Measles Cases") + theme_bw()
total.measlescases
data.year.mcv1 <- na.omit(aggregate(data$unicefmcv1, by=list(data$year),
FUN=mean, na.rm=TRUE))
mean.coverage <- ggplot(data.year.mcv1, aes(x = Group.1, y = x))+ geom_line()
mean.coverage
gavi00.measlescases <- ggplot(na.omit(gavi00.year.measlescases), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Measles Cases (Count)") +
ggtitle("Measles Cases, GAVI-Countries") + theme_bw()
gavi00.year.measlescases <- aggregate(gavi00$measles_cases, by=list(gavi00$year),
FUN=sum, na.rm=TRUE)
gavi00.measlescases <- ggplot(na.omit(gavi00.year.measlescases), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Measles Cases (Count)") +
ggtitle("Measles Cases, GAVI-Countries") + theme_bw()
gavi00.measlescases
data$measles_cases_under5pop
data$measles_deaths_under5pop
gavi00.measlescases <- ggplot(na.omit(gavi00.year.measlescases), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Measles Cases (Count)") +
ggtitle("Measles Cases, GAVI-Countries") + theme_bw() + xlim("1980, 2014")
gavi00.measlescases
gavi00.measlescases <- ggplot(na.omit(gavi00.year.measlescases), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Measles Cases (Count)") +
ggtitle("Measles Cases, GAVI-Countries") + theme_bw() + xlim(1980,2014)
gavi00.measlescases
