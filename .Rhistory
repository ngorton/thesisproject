choice = 1
)]
data[val_school <= val_noschool, ':='(
choice = 0
)]
return(1-mean(data$choice[1 <= data$yc]))
}
# A function that takes a high wage and returns
# a matrix of schooling rates based on mortality level
mort.func <- function(wages) {
for (k in 1:length(mortality.vector)){
wages.mat[k] <- wage(wages, mortality.vector[k])
}
return(wages.mat)
}
mort.func(1000)
mort.func(100)
#Also, this is the Brad Paisley concert: http://www.ticketmaster.com/brad-paisley-crushin-it-world-tour-bloomington-illinois-03-12-2016/event/07004F6C1F9C86C1?artistid=714837&majorcatid=10001&minorcatid=2&tm_link=artist_msg-0_07004F6C1F9C86C1
childhood=10
lifeexp=80
lowwage = 20
library(data.table)
setNumericRounding(0)
## Create values for parameters
mortality.vector <- seq(from = 0, to = 0.4, by = 0.01)
wages.scale<- seq(from = 20, to = 100, by = 5)
## Create some places to hold the data
wages.mat <- matrix(nrow = length(mortality.vector), ncol = 1)
results <- data.frame(1:length(mortality.vector))
results$rates <- rep(NA, nrow(results))
results$mort <- mortality.vector
## A function that takes in a mortality rate and a high wage
## and returns the rate of out of school kids
wage <- function(highwage, mortality.vector) {
data = data.table(cost=rnorm(1000, 50, 15), yc=rbinom(1000, 1, 1-mortality.vector))
data[yc==0, ':='(
val_school = -1*cost*childhood,
val_noschool = lowwage*(lifeexp-childhood)
)]
data[yc== 1, ':='(
val_school= -1*cost*childhood+ highwage*(lifeexp-childhood),
val_noschool = lowwage*lifeexp
)]
data[val_school > val_noschool, ':='(
choice = 1
)]
data[val_school <= val_noschool, ':='(
choice = 0
)]
return(1-mean(data$choice))
}
# A function that takes a high wage and returns
# a matrix of schooling rates based on mortality level
mort.func <- function(wages) {
for (k in 1:length(mortality.vector)){
wages.mat[k] <- wage(wages, mortality.vector[k])
}
return(wages.mat)
}
mort.func(100)
#Also, this is the Brad Paisley concert: http://www.ticketmaster.com/brad-paisley-crushin-it-world-tour-bloomington-illinois-03-12-2016/event/07004F6C1F9C86C1?artistid=714837&majorcatid=10001&minorcatid=2&tm_link=artist_msg-0_07004F6C1F9C86C1
childhood=10
lifeexp=80
lowwage = 20
library(data.table)
setNumericRounding(0)
## Create values for parameters
mortality.vector <- seq(from = 0, to = 0.4, by = 0.01)
wages.scale<- seq(from = 20, to = 100, by = 5)
## Create some places to hold the data
wages.mat <- matrix(nrow = length(mortality.vector), ncol = 1)
results <- data.frame(1:length(mortality.vector))
results$rates <- rep(NA, nrow(results))
results$mort <- mortality.vector
## A function that takes in a mortality rate and a high wage
## and returns the rate of out of school kids
wage <- function(highwage, mortality.vector) {
data = data.table(cost=rnorm(1000, 100, 15), yc=rbinom(1000, 1, 1-mortality.vector))
data[yc==0, ':='(
val_school = -1*cost*childhood,
val_noschool = lowwage*(lifeexp-childhood)
)]
data[yc== 1, ':='(
val_school= -1*cost*childhood+ highwage*(lifeexp-childhood),
val_noschool = lowwage*lifeexp
)]
data[val_school > val_noschool, ':='(
choice = 1
)]
data[val_school <= val_noschool, ':='(
choice = 0
)]
return(1-mean(data$choice))
}
# A function that takes a high wage and returns
# a matrix of schooling rates based on mortality level
mort.func <- function(wages) {
for (k in 1:length(mortality.vector)){
wages.mat[k] <- wage(wages, mortality.vector[k])
}
return(wages.mat)
}
mort.func(10)
mort.func(50)
#Also, this is the Brad Paisley concert: http://www.ticketmaster.com/brad-paisley-crushin-it-world-tour-bloomington-illinois-03-12-2016/event/07004F6C1F9C86C1?artistid=714837&majorcatid=10001&minorcatid=2&tm_link=artist_msg-0_07004F6C1F9C86C1
childhood=10
lifeexp=80
lowwage = 20
library(data.table)
setNumericRounding(0)
## Create values for parameters
mortality.vector <- seq(from = 0, to = 0.4, by = 0.01)
wages.scale<- seq(from = 20, to = 100, by = 5)
## Create some places to hold the data
wages.mat <- matrix(nrow = length(mortality.vector), ncol = 1)
results <- data.frame(1:length(mortality.vector))
results$rates <- rep(NA, nrow(results))
results$mort <- mortality.vector
## A function that takes in a mortality rate and a high wage
## and returns the rate of out of school kids
wage <- function(highwage, mortality.vector) {
data = data.table(cost=rnorm(1000, 200, 50), yc=rbinom(1000, 1, 1-mortality.vector))
data[yc==0, ':='(
val_school = -1*cost*childhood,
val_noschool = lowwage*(lifeexp-childhood)
)]
data[yc== 1, ':='(
val_school= -1*cost*childhood+ highwage*(lifeexp-childhood),
val_noschool = lowwage*lifeexp
)]
data[val_school > val_noschool, ':='(
choice = 1
)]
data[val_school <= val_noschool, ':='(
choice = 0
)]
return(1-mean(data$choice))
}
# A function that takes a high wage and returns
# a matrix of schooling rates based on mortality level
mort.func <- function(wages) {
for (k in 1:length(mortality.vector)){
wages.mat[k] <- wage(wages, mortality.vector[k])
}
return(wages.mat)
}
mort.func(70)
#Also, this is the Brad Paisley concert: http://www.ticketmaster.com/brad-paisley-crushin-it-world-tour-bloomington-illinois-03-12-2016/event/07004F6C1F9C86C1?artistid=714837&majorcatid=10001&minorcatid=2&tm_link=artist_msg-0_07004F6C1F9C86C1
childhood=10
lifeexp=80
lowwage = 20
library(data.table)
setNumericRounding(0)
## Create values for parameters
mortality.vector <- seq(from = 0, to = 0.4, by = 0.01)
wages.scale<- seq(from = 20, to = 100, by = 5)
## Create some places to hold the data
wages.mat <- matrix(nrow = length(mortality.vector), ncol = 1)
results <- data.frame(1:length(mortality.vector))
results$rates <- rep(NA, nrow(results))
results$mort <- mortality.vector
## A function that takes in a mortality rate and a high wage
## and returns the rate of out of school kids
wage <- function(highwage, mortality.vector) {
data = data.table(cost=rnorm(1000, 400, 150), yc=rbinom(1000, 1, 1-mortality.vector))
data[yc==0, ':='(
val_school = -1*cost*childhood,
val_noschool = lowwage*(lifeexp-childhood)
)]
data[yc== 1, ':='(
val_school= -1*cost*childhood+ highwage*(lifeexp-childhood),
val_noschool = lowwage*lifeexp
)]
data[val_school > val_noschool, ':='(
choice = 1
)]
data[val_school <= val_noschool, ':='(
choice = 0
)]
return(1-mean(data$choice))
}
# A function that takes a high wage and returns
# a matrix of schooling rates based on mortality level
mort.func <- function(wages) {
for (k in 1:length(mortality.vector)){
wages.mat[k] <- wage(wages, mortality.vector[k])
}
return(wages.mat)
}
mort.func(60)
mort.func(100)
mort.func(90)
mort.func(80)
vcov <- ols1(ols1, cluster = "pan_id")
ols1 <- plm(formula = rateofoutofschoolMF ~ lag(mortality, 5) + loggni + logpop, data = gavi.data, model = "within", effect = "twoways", na.action = na.omit)
vcov <- ols1(ols1, cluster = "pan_id")
robust <- vcov(ols1, cluster = "pan_id")
robust
summary(ols1)
install.packages("lmtest")
install.packages("lmtest")
library(lmtest)
mycov <- function(x) vcov(x, cluster = "pan_id")
coeftest(ols1, vcov=myvcov)
mycov <- function(x) vcov(x, cluster = "pan_id")
coeftest(ols1, vcov=mycov)
myvcov <- function(x) vcov(x, cluster = "pan_id")
coeftest(ols1, vcov=myvcov)
coeftest(ols1)
coeftest(ols1)
mycov <- function(x) vcov(ols1, cluster = "pan_id")
mycov
mycov(1)
vcov(ols1, cluster = "pan_id")
ols1 <- plm(formula = rateofoutofschoolMF ~ lag(mortality, 5) + loggni + logpop, data = gavi.data, model = "within", effect = "twoways", na.action = na.omit)
#Let's get started here, BROS!
setwd("~/Desktop/data")
library(foreign)
library(ggplot2)
library(plm)
library(stargazer)
library(lmtest)
write.table(read.dta('fridaypm.dta'), file="output.csv", quote = FALSE, sep = ",")
# Read it into R #
data <- read.csv("output.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
lifetables <- read.csv("lifetablesM.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
View(low)
vcov(ols1, cluster = "pan_id")
coeftest(ols1)
vcov(ols1, cluster = "pan_id")
myvcov <- function(x) vcovG(x, cluster = "pan_id")
coeftest(ols1, vcov=myvcov)
myvcov <- function(x) vcovG(x, cluster = "group")
coeftest(ols1, vcov=myvcov)
coeftest(ols1, vcov=myvcov)
myvcov <- function(x) vcovG(x, cluster = "group", inner = "cluster")
coeftest(ols1, vcov=myvcov)
mydata$ageID <- rep(0, nrow(mydata))
mydata$ageID["AGE65-69" <= mydata$AGEGROUP] <- 3
lifetables <- read.csv("lifetablesM.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
lifetables$ageID <- rep(0, nrow(mydata))
lifetables$ageID["AGE65-69" <= mydata$AGEGROUP] <- 3
lifetables <- read.csv("lifetablesM.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
lifetables$ageID <- rep(0, nrow(lifetables))
lifetables$ageID["AGE65-69" <= lifetables$AGEGROUP] <- 3
lifetables$ageID[lifetables$AGEGROUP == "AGE65-69"] <- 3
lifetables$ageID[lifetables$AGEGROUP == "AGE65-69"] <- 99
lifetables$ageID <- rep(0, nrow(lifetables))
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetablesMale <- subset(lifetables, lifetables$sex == "MLE")
lifetables$ageID <- rep(0, nrow(lifetables))
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetables$ageID[lifetables$AGEGROUP =! "AGE10-14" | "AGE5-9" | "AGELT1"] <- 99
lifetables$ageID[lifetables$AGEGROUP =! "AGE10-14" ] <- 99
lifetables$ageID[lifetables$AGEGROUP != "AGE10-14" ] <- 99
lifetablesMale <- subset(lifetables, lifetables$sex == "MLE")
lifetables$ageID <- rep(0, nrow(lifetables))
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetables$ageID[lifetables$AGEGROUP != "AGE10-14" | lifetables$AGEGROUP !=  "AGE5-9" |lifetables$AGEGROUP !=  "AGELT1"] <- 99
lifetablesYoung <- subset(lifetablesMale, lifetables$ageID < 4)
lifetablesMale <- subset(lifetables, lifetables$SEX == "MLE")
lifetables$ageID <- rep(0, nrow(lifetables))
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetables$ageID[lifetables$AGEGROUP != "AGE10-14" | lifetables$AGEGROUP !=  "AGE5-9" |lifetables$AGEGROUP !=  "AGELT1"] <- 99
lifetablesYoung <- subset(lifetablesMale, lifetables$ageID < 4)
head(lifetables$ageID)
View(lifetablesMale)
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetables$ageID[lifetables$AGEGROUP != "AGE10-14" & lifetables$AGEGROUP !=  "AGE5-9" & lifetables$AGEGROUP !=  "AGELT1"] <- 99
lifetablesYoung <- subset(lifetablesMale, lifetables$ageID < 4)
View(lifetablesYoung)
lifetables$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetables$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetables$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetables$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetablesMale$ageID <- rep(0, nrow(lifetables))
lifetablesMale$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetablesMale$ageID[lifetables$AGEGROUP != "AGE10-14" & lifetables$AGEGROUP !=  "AGE5-9" & lifetables$AGEGROUP !=  "AGELT1"] <- 99
lifetablesMale <- subset(lifetables, lifetables$SEX == "MLE")
lifetablesMale$ageID <- rep(0, nrow(lifetablesMale))
lifetablesMale$ageID[lifetables$AGEGROUP == "AGELT1"] <- 0
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE1-4"] <- 1
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE5-9"] <- 2
lifetablesMale$ageID[lifetables$AGEGROUP == "AGE10-14"] <- 3
lifetablesMale$ageID[lifetables$AGEGROUP != "AGE10-14" & lifetables$AGEGROUP !=  "AGE5-9" & lifetables$AGEGROUP !=  "AGELT1"] <- 99
lifetablesMale <- subset(lifetables, lifetables$SEX == "MLE")
lifetablesMale$ageID <- rep(0, nrow(lifetablesMale))
lifetablesAll <- subset(lifetables, lifetables$SEX == "BTSX")
lifetablesAll$ageID <- rep(0, nrow(lifetablesAll))
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGELT1"] <- 0
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE1-4"] <- 1
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE5-9"] <- 2
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE10-14"] <- 3
lifetablesAll$ageID[lifetablesAll$AGEGROUP != "AGE10-14" & lifetablesAll$AGEGROUP !=  "AGE5-9" & lifetablesAll$AGEGROUP !=  "AGELT1"] <- 99
#
lifetablesYoung <- subset(lifetablesAll, lifetables$ageID < 4)
View(lifetablesYoung)
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
View(lifetablesYoung)
lifetables <- read.csv("lifetablesM.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
lifetablesAll <- subset(lifetables, lifetables$SEX == "BTSX")
lifetablesAll$ageID <- rep(0, nrow(lifetablesAll))
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGELT1"] <- 0
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE1-4"] <- 1
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE5-9"] <- 2
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE10-14"] <- 3
lifetablesAll$ageID[lifetablesAll$AGEGROUP != "AGE10-14" & lifetablesAll$AGEGROUP !=  "AGE5-9" & lifetablesAll$AGEGROUP !=  "AGELT1"] <- 99
## Keep only the young'uns
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
View(lifetables)
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
lifetablesAll <- subset(lifetables, lifetables$SEX == "BTSX")
lifetablesAll$ageID <- rep(0, nrow(lifetablesAll))
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGELT1"] <- 0
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE1-4"] <- 1
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE5-9"] <- 2
lifetablesAll$ageID[lifetablesAll$AGEGROUP == "AGE10-14"] <- 3
lifetablesAll$ageID[lifetablesAll$AGEGROUP != "AGE10-14" & lifetablesAll$AGEGROUP !=  "AGE5-9" & lifetablesAll$AGEGROUP !=  "AGELT1"] <- 99
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
View(lifetablesYoung)
lifetables <- read.csv("lifetablesM.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
lifetablesMale <- subset(lifetables, lifetables$SEX == "MLE")
lifetablesMale$ageID <- rep(0, nrow(lifetablesMale ))
lifetablesMale$ageID[lifetablesMale$AGEGROUP == "AGELT1"] <- 0
lifetablesMale$ageID[lifetablesMale$AGEGROUP == "AGE1-4"] <- 1
lifetablesMale$ageID[lifetablesMale$AGEGROUP == "AGE5-9"] <- 2
lifetablesMale$ageID[lifetablesMale$AGEGROUP == "AGE10-14"] <- 3
lifetablesMale$ageID[lifetablesMale$AGEGROUP != "AGE10-14" & lifetablesMale$AGEGROUP !=  "AGE5-9" & lifetablesMale$AGEGROUP !=  "AGELT1"] <- 99
lifetablesYoung <- subset(lifetablesAll, lifetablesAll$ageID < 4)
View(lifetablesYoung)
lifetablesYoung <- subset(lifetablesMale , lifetablesMale$ageID < 4)
View(lifetablesYoung)
lifetablesYoung$iso_code <- lifetablesYoung$country
View(lifetablesYoung)
lifetablesYoung$code <- lifetablesYoung$country
merge(lifetablesYoung, gavi00, id = "code")
merged.data <- merge(lifetablesYoung, gavi00, id = "code")
# Data work #
# Covert data from STATA to CSV #
setwd("~/Desktop/data")
library(foreign)
library(ggplot2)
library(plm)
library(stargazer)
write.table(read.dta('saturdayam.dta'), file="output.csv", quote = FALSE, sep = ",")
# Read it into R #
data <- read.csv("output.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
gavi00$onetofivemort
gavi00$onetofourmort
gavi00$onetofourmort
# Subsetting by income group #
low <- subset(data, data$low == 1)
high <- subset(data, data$high == 1)
gavi00 <- subset(data, data$gavi_status_00== 1)
no.gavi00 <- subset(data, data$gavi_status_00== 0)
gavi00$onetofourmort
na.omit(avi00$onetofourmort)
na.omit(gavi00$onetofourmort)
mortality.rates <- ggplot(data = gavi00, aes(x = year,y= na.omit(gavi00$onetofivemort))
mortality.rates <- ggplot(data = gavi00, aes(x = year,y= na.omit(gavi00$onetofivemort)))+geom_point()
mortality.rates <- ggplot(data = gavi00, aes(x = year, y= gavi00$onetofivemort))+geom_point()
mortality.rates
mortality.rates <- ggplot(data = gavi00, aes(x = year, y= onetofourmort))+geom_point()
mortality.rates
mortality.rates <- ggplot()+geom_point(data = gavi00, aes(x = year, y= onetofourmort))+geom_point(data = gavi00, aes(x = year, y= underonemort))+geom_point(data = gavi00, aes(x = year, y= fivetoninemort))
mortality.rates
mortality.rates <- ggplot()+geom_point(data = gavi00, aes(x = year, y= onetofourmort), color = "blue")+geom_point(data = gavi00, aes(x = year, y= underonemort), color = "red")+geom_point(data = gavi00, aes(x = year, y= fivetoninemort))
mortality.rates
mortality.rates <- ggplot()+geom_point(data = gavi00, aes(x = year, y= onetofourmort), color = "blue")+geom_point(data = gavi00, aes(x = year, y= underonemort), color = "red")+geom_point(data = gavi00, aes(x = year, y= fivetoninemort)) + xlim(1990, 2014)
mortality.rates
rates.subset <- subset(gavi00, onetofourmort)
rates.subset <- gavi00[rowSums(is.na(gavi00$underonemort)>0,]
rates.subset <- gavi00[rowSums(is.na(gavi00$underonemort))>0,]
new_DF <- DF[rowSums(is.na(DF)) > 0,]
rates.subset <- gavi00$underonemort[rowSums(is.na(gavi00$underonemort))>0,]
lifetables.stata <- read.csv("lifetables_merged.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
write.table(read.dta('lifetables_merged.dta'), file="lifetables_merged.csv", quote = FALSE, sep = ",")
lifetables.stata <- read.csv("lifetables_merged.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
melted.mort <- melt(lifetables.stata, id.vars = c("year", "code"))
install.packages("reshape")
library(reshape)
melted.mort <- melt(lifetables.stata, id.vars = c("year", "code"))
write.table(read.dta('lifetables_merged.dta'), file="lifetables_merged.csv", quote = FALSE, sep = ",")
lifetables.stata <- read.csv("lifetables_merged.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
melted.mort <- melt(lifetables.stata, id.vars = c("year", "code"))
melted.mort <- melt(lifetables.stata, id = c("year", "code"))
View(melted.mort)
View(lifetables.stata)
melted.mort <- melt(na.omit(lifetables.stata), id = c("year", "code"))
melted.mort <- melt(na.omit(lifetables.stata), id = "code")
na.omit(lifetables)
na.omit(lifetables.stata)
melted.mort <- melt(lifetables.stata, id = "code")
library(reshape2)
melted.mort <- melt(lifetables.stata, id = "code")
melted.mort <- melt(lifetables.stata, id.vars=c("code", "year"))
install.packages("reshape2")
install.packages("reshape2")
# Data work #
# Covert data from STATA to CSV #
setwd("~/Desktop/data")
library(foreign)
library(ggplot2)
library(plm)
library(stargazer)
write.table(read.dta('saturdayam.dta'), file="output.csv", quote = FALSE, sep = ",")
# Read it into R #
data <- read.csv("output.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
# Subsetting by income group #
low <- subset(data, data$low == 1)
high <- subset(data, data$high == 1)
gavi00 <- subset(data, data$gavi_status_00== 1)
no.gavi00 <- subset(data, data$gavi_status_00== 0)
# Plot some things for poor countries #
gavi00.year.diff.coverage.mean <-aggregate(gavi00$diff_mcv1coverage, by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
gavi00.mcv1.mean <- ggplot(gavi00.year.diff.coverage.mean, aes(Group.1, x))
gavi00.mcv1.mean + geom_line() + labs(x = "Year", y = "Change in MCV1 coverage (percentage point)") +
ggtitle("Average Annual Change in MCV1 Coverage Over Time \n Low-Income Countries") + theme_bw()
gavi00.year.schoolingM <- aggregate(gavi00$rateofoutofschoolM, by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
gavi00.school <- ggplot(na.omit(gavi00.year.schoolingM), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Rate of Out of School Boys \n of Primary Age (%)") +
ggtitle("Schooling Trends Over Time, Poor Countries") + theme_bw()
gavi00.year.measlescases <- aggregate(gavi00$measles_cases, by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
data.year.measlescases.sum <- aggregate(data$measles_cases, by=list(data$year),
FUN=sum, na.rm=TRUE)
data.year.mcv1 <- na.omit(aggregate(data$unicefmcv1, by=list(data$year),
FUN=mean, na.rm=TRUE))
total.measlescases <- ggplot(data.year.measlescases.sum, aes(x = Group.1, y =x)) + geom_bar(stat = "identity") + xlim(1980,2013) +xlab("Year")+ylab("Number of Measles Cases") + theme_bw()
average.cov <- ggplot() + geom_line(data = data.year.mcv1, aes(x = data.year.mcv1$Group.1, y = data.year.mcv1$x)) + geom_line(data = data.year.mcv1, aes(x = data.year.mcv1$Group.1, y = data.year.mcv1$x))
gavi00.measlescases <- ggplot(na.omit(gavi00.year.measlescases), aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Measles Cases (Count)") +
ggtitle("Schooling Trends Over Time, Poor Countries") + theme_bw()
gavi00.year.spending <- na.omit(aggregate(as.numeric(gavi00$vaxspending), by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
gavi00.diff.mort <- ggplot(gavi00, aes(x = diff_mcv1coverage, y = diff_cases)) +                    # basic graphical object
geom_point() + labs(x = "Change in Coverage", y = "Change in Mortality") +
ggtitle("") + theme_bw()
gavi00.year.meanmcv1cov <- aggregate(gavi00$diff_mcv1coverage, by=list(gavi00$year),
FUN=mean, na.rm=TRUE)
# Mean Changes in Coverage by Year, GAVI-supported Countries #
gavi00.diff.cov <- ggplot(gavi00.year.meanmcv1cov, aes(x = Group.1 , y = x)) +                    # basic graphical object
geom_line() + labs(x = "year", y = "diff_mcv1coverage") +
ggtitle("Mean Changes in Coverage by Year") + theme_bw()
gavi00.coverage.mortality <- ggplot(gavi00, aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Percentage of Immunization Costs \n Covered by National Government") +
ggtitle("") + theme_bw()
no.gavi00.year.spending <- na.omit(aggregate(no.gavi00$vaxspending, by=list(no.gavi00$year),
FUN=mean, na.rm=TRUE))
no.gavi00.spending <- ggplot(no.gavi00.year.spending, aes(x = Group.1, y = x)) +                    # basic graphical object
geom_line(colour="green") + labs(x = "Year", y = "Percentage of Immunization Costs \n Covered by National Government") +
ggtitle("") + theme_bw()
gavi00.natlbudget <- ggplot(gavi00, aes(natlbudget)) + geom_bar(stat = "count")
gavi00.year.mcv1 <- na.omit(aggregate(gavi00$unicefmcv1, by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
school.mortality <- ggplot(data = gavi00, aes(x = mortality, y = rateofoutofschoolMF)) + geom_point() + stat_smooth()+xlab("Child Mortality, out of 1000 Live Births")+ylab("Rate of Children Out of School") +theme_bw()
vaccine.mortality <-ggplot(data = gavi00, x = unicefmcv1, y = mortality)
vaccine.budget.coverage <-
geom_line(data=gavi00.year.spending, aes(x=Group.1, y=x, color = "spending")) +
geom_line(data=gavi00.year.mcv1, aes(x=Group.1, y=x, color = "coverage")) + ggtitle("Average Vaccine Costs and MCV1 Coverage \n GAVI-Supported Countries") + xlim(1998, 2014) + xlab("Year")+ ylab("Percentage")+ scale_colour_manual("",
breaks = c("Percentage of Costs Covered", "MCV1 Coverage"),
values = c("black", "blue"), guide = guide_legend()) +theme_bw() +   theme(legend.position = "bottom")
vaccine.budget.coverage
vaccine.budget <- ggplot() +
geom_line(data=gavi00.year.spending, aes(x=Group.1, y=x),
colour="blue") +
geom_line(data=no.gavi00.year.spending, aes(x=Group.1, y=x),
colour="red") + xlab("Year") + ylab("Percentage of Immunization Costs \n Covered by National Government") +theme_bw()
gavi00.schooling <- na.omit(aggregate(gavi00$rateofoutofschoolMF, by=list(gavi00$year),
FUN=mean, na.rm=TRUE))
gavi.sub.covered <- subset(gavi00, mcv_covered == 1)
gavi.sub.notcovered <- subset(gavi00, mcv_covered == 0)
gavi00.schooling.covered <- na.omit(aggregate(gavi.sub.covered$rateofoutofschoolMF, by=list(gavi.sub.covered$year),
FUN=mean, na.rm=TRUE))
gavi00.schooling.notcovered <- na.omit(aggregate(gavi.sub.notcovered$rateofoutofschoolMF, by=list(gavi.sub.notcovered$year),
FUN=mean, na.rm=TRUE))
mean.year <- mean(na.omit(gavi00$index_year))
mean.year.covered <- mean(na.omit((gavi00[gavi00$mcv_covered == 0,])$index_year))
## Plot schooling rates over time based on coverage group ##
awesome.plot <- ggplot(data=gavi00.schooling.covered, aes(x=Group.1, y=x),
colour="black") + geom_line(linetype = "dotdash") +
geom_line(data=gavi00.schooling.notcovered, aes(x=Group.1, y=x),
colour="black") + xlab("Year") + ylab("Percentage of Out of School Children \n Of Primary School Age") +theme_bw()+ xlim(1980, 2014) +  geom_vline(xintercept = 1992)
## Ploting the Drop off Rate between levels of mortality ##
library(reshape2)
write.table(read.dta('lifetables_merged.dta'), file="lifetables_merged.csv", quote = FALSE, sep = ",")
lifetables.stata <- read.csv("lifetables_merged.csv", header = TRUE, row.names=NULL, na.strings=c("","NA"))
melted.mort <- melt(lifetables.stata, id.vars=c("code", "year"))
mortality.rates <- ggplot()+geom_point(data = gavi00, aes(x = year, y= onetofourmort), color = "blue")+geom_point(data = gavi00, aes(x = year, y= underonemort), color = "red")+geom_point(data = gavi00, aes(x = year, y= fivetoninemort)) + xlim(1990, 2014)
View(melted.mort)
